apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "app.name" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "common.labels" . | indent 4 }}
spec:
  progressDeadlineSeconds: 600
  replicas: {{ .Values.replicas | default .Values.default-replicas }}
  selector:
    matchLabels:
      app: {{ template "app.name" . }}
  strategy:
    rollingUpdate:
      maxSurge: {{ .Values.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.rollingUpdate.maxUnavailable }}
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/path: /actuator/prometheus
        prometheus.io/port: '{{ .Values.service.http.internalPort }}'
        prometheus.io/scrape: 'true'
      labels:
        {{- include "common.labels" . | indent 8 }}
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - {{ template "app.name" . }}
                topologyKey: kubernetes.io/hostname
              weight: 100
      containers:
        - name: {{ .Chart.Name }}
          image: {{ .Values.image.identifier }}
          imagePullPolicy: {{ .Values.image.imagePullPolicy }}
          env:
            - name: JDK_JAVA_OPTIONS
              value: -server -Xmx{{ .Values.resources.xmx }} -XX:+UseG1GC -XX:MaxGCPauseMillis=750 -XX:ConcGCThreads=2
                -XX:ParallelGCThreads=5
                -Dspring.config.additional-location=/etc/application-config/application.properties
                -Dfile.encoding=UTF-8
            - name: TZ
              value: Europe/Oslo
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /etc/vehicle-positions/credentials.json
          resources:
            limits:
              cpu: {{ .Values.resources.cpuLimit }}
              memory: {{ .Values.resources.memLimit }}
            requests:
              cpu: {{ .Values.resources.cpuRequest }}
              memory: {{ .Values.resources.memRequest }}
          volumeMounts:
            - name: {{ .Values.secretMount.name }}
              mountPath: {{ .Values.secretMount.mountPath }}
              subPath: {{ .Values.secretMount.subPath }}
              readOnly: {{ .Values.secretMount.readOnly }}
            - mountPath: /etc/application-config
              name: application-config
              readOnly: true
          ports:
            - containerPort: {{ .Values.service.http.internalPort }}
              name: http
              protocol: TCP
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - curl --fail http://0.0.0.0:{{ .Values.service.http.internalPort }}/actuator/health
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          startupProbe:
            exec:
              command:
                - sh
                - -c
                - curl --fail http://0.0.0.0:{{ .Values.service.http.internalPort }}/actuator/health
            failureThreshold: 25
            periodSeconds: 5
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      {{- if .Values.rbac.enabled }}
      serviceAccount: vehicle-positions-service-account
      serviceAccountName: vehicle-positions-service-account
      {{- end }}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: {{ .Values.secretMount.name }}
          secret:
            secretName: {{ .Values.secretMount.secretName }}
        - name: application-config
          configMap:
            name: {{ .Values.configMapMount.name }}
            defaultMode: 420