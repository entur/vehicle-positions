
scalar DateTime

schema {
    query: Query
    subscription : Subscription
}

type Query {

    vehicles(serviceJourneyId: String
           operatorRef: String
           codespaceId: String
           mode: VehicleModeEnumeration
           vehicleId: String
           lineRef: String
           lineName: String
           monitored: Boolean
           boundingBox: BoundingBox) : [VehicleUpdate]

    lines(codespaceId: String) : [Line]

    codespaces : [Codespace]

    serviceJourneys(lineRef: String!) : [ServiceJourney]

    operators(codespaceId: String!) : [Operator]
}

type Subscription {
    vehicleUpdates(serviceJourneyId: String
                   operatorRef: String
                   codespaceId: String
                   mode: VehicleModeEnumeration
                   vehicleId: String
                   lineRef: String
                   lineName: String
                   monitored: Boolean
                   boundingBox: BoundingBox) : VehicleUpdate
}

type VehicleUpdate {
    direction: String
    serviceJourneyId: String
    operatorRef: String
    codespaceId: String
    mode: VehicleModeEnumeration
    vehicleId: String
    lineRef: String
    lineName: String
    lastUpdated: DateTime
    expiration: DateTime
    location: Location
    speed: Float
    heading: Float @deprecated
    bearing: Float

    monitored: Boolean

    # The current delay in seconds - negative delay means ahead of schedule
    delay: Float
}

type Location {
    latitude: Float!
    longitude: Float!
}

type Line {
    lineRef: String
    lineName: String
}

type Codespace {
    codespaceId: String!
}

type ServiceJourney {
    serviceJourneyId: String!
}

type Operator {
    operatorRef: String!
}

input BoundingBox {
    minLat: Float!
    minLon: Float!
    maxLat: Float!
    maxLon: Float!
}

enum VehicleModeEnumeration {
    AIR
    BUS
    RAIL
    TRAM
    COACH
    FERRY
    METRO
}