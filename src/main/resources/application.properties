
server.port=8080

entur.vehicle-positions.gcp.topic.project.name=ent-anshar-dev
entur.vehicle-positions.gcp.topic.name=avro.vehicle_monitoring
entur.vehicle-positions.gcp.subscription.project.name=ent-vpos-dev
entur.vehicle-positions.gcp.subscription.name=vehicle-positions.graphql-${random.uuid}
entur.vehicle-positions.gcp.labels={app:'vehicle-positions',team:'ror', slack:'talk-ror', manager:'application'}

# https://cloud.google.com/pubsub/docs/concurrency-control#java
# how many StreamingPull streams the subscriber will open to receive message.
entur.vehicle-positions.pubsub.parallel.pullcount=1
# Number of executor-threads per stream
entur.vehicle-positions.pubsub.parallel.executorThreadCount=5

vehicle.updates.gtfsrt.url=
#vehicle.updates.gtfsrt.url=https://api.dev.entur.io/realtime/v1/gtfs-rt/vehicle-positions
vehicle.updates.gtfsrt.interval=PT10S

graphql.servlet.actuator-metrics=false
graphql.servlet.tracing-enabled=false

management.endpoints.web.exposure.include=info, health, prometheus, env, metrics, loggers
management.endpoints.prometheus.enabled=true

management.metrics.endpoint.export.prometheus.enabled=true

vehicle.updates.max.validity.minutes=1440

vehicle.updates.purge.interval=PT5S
vehicle.updates.expiry.grace.period=PT10M

vehicle.journeyplanner.url=https://api.dev.entur.io/journey-planner/v3/graphql
vehicle.journeyplanner.EtClientName=ror.vehicle-positions.graphql
vehicle.line.lookup.enabled=true

graphql.graphiql.enabled=true
graphql.graphiql.mapping=/
graphql.graphiql.endpoint.graphql=/graphql
graphql.graphiql.endpoint.subscriptions=/subscriptions
graphql.graphiql.props.resources.query=graphql/examplequeries/all_vehicles.graphql